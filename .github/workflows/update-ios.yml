name: Update iOS

on:
    workflow_dispatch:

    push:
        branches:
            - "build/release"
            - "fix/data-migration"
        tags:
          - 'v*'

jobs:
    update_ios:
        runs-on: macos-13
        steps:
            - name: Check out the repo
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                node-version: '16.18'

            - name: get latest tag
              uses: "WyriHaximus/github-action-get-previous-tag@v1"
              id: get-latest-tag
              with:
                fallback: latest

            - name: Show All Xcode version
              run: ls /Applications | grep Xcode
              
            - name: Setup Xcode
              uses: maxim-lobanov/setup-xcode@v1
              with:
                xcode-version: '14.2'

            - name: Cache
              uses: actions/cache@v1
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/packagge-lock.json')}}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: configure ruby
              uses: ruby/setup-ruby@v1
              with:
                ruby-version: 3.0

            - name: Install Cocoapods
              run: sudo gem install cocoapods

            - name: Install Bundler and activesupport
              run: |
                sudo gem uninstall --force activesupport -v 7.1.1
                sudo gem install activesupport -v 7.0.8
                gem list | grep -i active
                
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: 3.9

            - name: Install
              run: |
                npm install
            - run: npm i -g @quasar/cli

            - name: Build iOS
              run: cd packages/app/;PLATFORM=MOBILE quasar build -m capacitor -T ios --skip-pkg; 

            - name: Setup plist version
              run: cd packages/app/src-capacitor/ios/app/shell/;chmod +x config.sh; ./config.sh;

            - name: Install the Apple certificate and provisioning profile
              env:
                BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_BUILD_DEV_CERTIFICATE_BASE64 }}
                P12_PASSWORD: ${{ secrets.IOS_P12_DEV_PASSWORD }}
                BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_PROVISION_PROFILE_BASE64 }}
                BUILD_AUTOFILL_EXTENSION_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_AUTOFILL_EXTENSION_PROVISION_PROFILE_BASE64 }}
                BUILD_VPN_EXTENSION_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_VPN_EXTENSION_PROVISION_PROFILE_BASE64 }}
                BUILD_SHARE_EXTENSION_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_SHARE_EXTENSION_PROVISION_PROFILE_BASE64 }}
                BUILD_ACTION_EXTENSION_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_ACTION_EXTENSION_PROVISION_PROFILE_BASE64 }}
                KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
              run: |
                # create variables
                CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
                PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
                AUTOFILL_EXTENSION_PP_PATH=$RUNNER_TEMP/autofill_extension_build_pp.mobileprovision
                VPN_EXTENSION_PP_PATH=$RUNNER_TEMP/vpn_extension_build_pp.mobileprovision
                SHARE_EXTENSION_PP_PATH=$RUNNER_TEMP/share_extension_build_pp.mobileprovision
                ACTION_EXTENSION_PP_PATH=$RUNNER_TEMP/action_extension_build_pp.mobileprovision
                KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

                # import certificate and provisioning profile from secrets
                echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
                echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
                echo -n "$BUILD_AUTOFILL_EXTENSION_PROVISION_PROFILE_BASE64" | base64 --decode -o $AUTOFILL_EXTENSION_PP_PATH
                echo -n "$BUILD_VPN_EXTENSION_PROVISION_PROFILE_BASE64" | base64 --decode -o $VPN_EXTENSION_PP_PATH
                echo -n "$BUILD_SHARE_EXTENSION_PROVISION_PROFILE_BASE64" | base64 --decode -o $SHARE_EXTENSION_PP_PATH
                echo -n "$BUILD_ACTION_EXTENSION_PROVISION_PROFILE_BASE64" | base64 --decode -o $ACTION_EXTENSION_PP_PATH

                # create temporary keychain
                security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
                security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

                # import certificate to keychain
                security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                security list-keychain -d user -s $KEYCHAIN_PATH

                # apply provisioning profile
                mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
                cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                cp $AUTOFILL_EXTENSION_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                cp $VPN_EXTENSION_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                cp $SHARE_EXTENSION_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                cp $ACTION_EXTENSION_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

            - name: Make ipa
              run: cd packages/app/src-capacitor/ios/App/;xcodebuild archive -workspace App.xcworkspace -scheme App -configuration Release -archivePath Archive/App;xcodebuild -exportArchive -archivePath Archive/App.xcarchive -exportOptionsPlist Ipa/App/ExportOptions.plist -exportPath Ipa/App/;

            - name: Show
              run: ls -a packages/app/src-capacitor/ios/App/Ipa/App/

            - name: Release iOS Ipa
              uses: djnicholson/release-action@v2.11
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  release-name: TermiPass-ipa Release
                  tag-name: ${{ steps.get-latest-tag.outputs.tag }}
                  asset-name: TermiPass.ipa
                  file: packages/app/src-capacitor/ios/App/Ipa/App/App.ipa
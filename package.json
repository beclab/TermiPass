{
    "name": "didvault",
    "private": true,
    "version": "0.1.0",
    "description": "A Web3 Vault",
    "author": "Peng Peng <pengpeng@bytetrade.io>",
    "license": "GPL-3.0",
    "engines": {
        "node": "19.8.1",
        "npm": "8.2.0"
    },
    "main": "main.js",
    "devDependencies": {
        "@intlify/vue-i18n-loader": "4.2.0",
        "@types/bcrypt": "5.0.0",
        "@typescript-eslint/eslint-plugin": "5.52.0",
        "@typescript-eslint/parser": "5.52.0",
        "concurrently": "7.0.0",
        "cypress": "9.3.1",
        "eslint": "^8.10.0",
        "eslint-config-prettier": "^8.1.0",
        "eslint-plugin-prettier": "4.0.0",
        "eslint-plugin-vue": "^9.0.0",
        "http-server": "14.1.0",
        "husky": ">=7",
        "lerna": "5.1.8",
        "lint-staged": ">=10",
        "prettier": "2.5.1",
        "ts-node": "10.0.0",
        "typescript": "4.4.3",
        "wait-on": "6.0.0"
    },
    "scripts": {
        "postinstall": "lerna bootstrap && lerna exec npm install",
        "bootstrap": "lerna bootstrap",
        "app:build": "lerna run build --scope @didvault/app",
        "mobile:build": "lerna run build:mobile --scope @didvault/app",
        "desktop:build": "lerna run build:desktop --scope @didvault/app",
        "files:build": "lerna run build:files --scope @didvault/app",
        "pwa:start": "lerna run start --scope @didvault/app",
        "server:start": "lerna run start --scope @didvault/server --stream",
        "server:start-dry": "lerna run start-dry --stream --scope @didvault/server",
        "server:build": "lerna run build --scope @didvault/server",
        "sign:build": "lerna run build --scope @didvault/sign2",
        "admin:build": "lerna run build --scope @didvault/admin",
        "notification:build": "lerna run build --scope @didvault/notification",
        "electron:start": "lerna run start --scope @didvault/electron",
        "electron:build": "lerna run build --scope @didvault/electron",
        "electron:build:flatpak": "lerna run build:didvault",
        "web-extension:build": "lerna run build --scope @didvault/extension",
        "cordova:start:android": "lerna run start:android",
        "cordova:start:ios": "lerna run start:ios",
        "cordova:build": "lerna run build:android && lerna run build:ios",
        "cordova:build:android": "lerna run build:android",
        "cordova:build:android:signed": "lerna run build:android:signed",
        "cordova:build:ios": "lerna run build:ios",
        "cordova:build:ios:signed": "lerna run build:ios:signed",
        "start": "npm run pwa:build && lerna run --scope '@didvault/{server,frontend}' --parallel start",
        "clean": "lerna run --scope '@didvault/{server,mockbfl,sign2}' --parallel clean",
        "dev": "PL_SERVER_URL=http://127.0.0.1:3000 SERVER_PROXY_NNME=zhaohuaiyuan lerna run --scope '@didvault/{server,app,mockbfl,notification,mockws}' --parallel dev",
        "dev:1": "PL_SERVER_URL=http://127.0.0.1:3000 lerna run --scope '@didvault/{server,mockbfl}' --parallel dev",
        "dev:2": "PL_SERVER_URL=http://127.0.0.1:3010 lerna run --scope '@didvault/{server2,mockbfl2}' --parallel dev",
        "dev:desktop": "PL_SERVER_URL=http://127.0.0.1:3000 SERVER_PROXY_NNME=guojianmin lerna run --scope '@didvault/app' --parallel dev:desktop",
        "dev:files": "PL_SERVER_URL=http://127.0.0.1:3000 SERVER_PROXY_NNME=guojianmin lerna run --scope '@didvault/app' --parallel dev:files",
        "clean:2": "lerna run --scope '@didvault/{server,server2,mockbfl,mockbfl2,sign2}' --parallel clean",
        "dev:mobile": "PL_SERVER_URL=http://127.0.0.1:3000 SERVER_PROXY_NNME=guojianmin lerna run --scope '@didvault/app' --parallel dev:mobile",
        "dev:member": "PL_SERVER_URL=http://127.0.0.1:3000 SERVER_PROXY_NNME=zhaohuaiyuan lerna run --scope '@didvault/app' --parallel dev:member",
        "dev:member:mobile": "PL_SERVER_URL=http://127.0.0.1:3000 lerna run --scope '@didvault/app' --parallel dev:member:mobile",
        "dev:mobile:android": "PL_SERVER_URL=http://127.0.0.1:3000 lerna run --scope '@didvault/app' --parallel dev:mobile:android",
        "tauri:dev": "lerna run --parallel --scope '@didvault/{server,tauri}' --parallel dev",
        "tauri:update": "lerna run update-tauri",
        "tauri:build": "lerna run build --scope @didvault/tauri",
        "tauri:build:debug": "lerna run build:debug",
        "repl": "cd packages/server && npm run repl && cd ../..",
        "test": "lerna run test",
        "posttest": "npm run format",
        "test:e2e": "concurrently --prefix=name --prefix-length=30 --kill-others --success=first -n app,v3-app,maildev,cypress \"PL_DATA_BACKEND=memory PL_DISABLE_SW=true PL_EMAIL_BACKEND=smtp PL_EMAIL_SMTP_HOST=localhost PL_EMAIL_SMTP_PORT=1025 PL_EMAIL_SMTP_IGNORE_TLS=true npm start\" \"npm run start:v3\" \"npx maildev\" \"./node_modules/.bin/wait-on tcp:localhost:8080 && CYPRESS_CRASH_REPORTS=0 cypress run\"",
        "test:e2e:dev": "concurrently --prefix=name --prefix-length=30 --kill-others --success=first -n app,v3-app,cypress \"PL_DATA_BACKEND=memory PL_DISABLE_SW=true PL_EMAIL_BACKEND=smtp PL_EMAIL_SMTP_HOST=localhost PL_EMAIL_SMTP_PORT=1025 PL_EMAIL_SMTP_IGNORE_TLS=true npm run dev\" \"npm run start:v3\" \"npx maildev\" \"./node_modules/.bin/wait-on tcp:localhost:8080 && CYPRESS_CRASH_REPORTS=0 cypress open\"",
        "locale:extract": "lerna run extract --scope '@didvault/locale'",
        "add": "lerna add $1 --exact --scope=@didvault/$scope",
        "remove": "rm packages/$scope/package-lock.json && lerna exec \"npm uninstall $1\" --scope=@didvault/$scope",
        "prettier": "prettier --write .",
        "prettier:check": "prettier --check .",
        "format": "prettier --loglevel warn --write \"**/*.{js,ts,vue,css,md}\"",
        "format:check": "prettier --check .",
        "update-version": "lerna version $1 --yes",
        "version": "lerna version $1 --yes",
        "publish": "lerna publish",
        "prepare": "husky install",
        "lint": "eslint --ext .js,.ts,.vue ./"
    },
    "lint-staged": {
        "*.{js,ts,vue}": "eslint --cache --fix",
        "*.{js,ts,vue,css,md}": "prettier --write"
    },
    "dependencies": {
        "@bytetrade/core": "0.3.55",
        "clipboard": "2.0.11",
        "lodash.throttle": "4.1.1",
        "node-forge": "1.3.1",
        "postinstall": "0.8.0",
        "utif": "3.1.0"
    }
}
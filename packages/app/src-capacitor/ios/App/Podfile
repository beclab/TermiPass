
workspace 'App.xcworkspace'
platform :ios, '14.0'

inhibit_all_warnings!

use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods', :disable_input_output_paths => true

#pre_install do |installer|
#  # workaround for https://github.com/CocoaPods/CocoaPods/issues/3289
#  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
#end

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCommunityFacebookLogin', :path => '../../node_modules/@capacitor-community/facebook-login'
  pod 'CapacitorCommunityFcm', :path => '../../node_modules/@capacitor-community/fcm'
  pod 'BytetradeBarcodeScanner', :path => '../../node_modules/@bytetrade/barcode-scanner'
  pod 'CapacitorApp', :path => '../../node_modules/@capacitor/app'
  pod 'CapacitorCamera', :path => '../../node_modules/@capacitor/camera'
  pod 'CapacitorClipboard', :path => '../../node_modules/@capacitor/clipboard'
  pod 'CapacitorDevice', :path => '../../node_modules/@capacitor/device'
  pod 'CapacitorFilesystem', :path => '../../node_modules/@capacitor/filesystem'
  pod 'CapacitorNetwork', :path => '../../node_modules/@capacitor/network'
  pod 'CapacitorPushNotifications', :path => '../../node_modules/@capacitor/push-notifications'
  pod 'CapacitorScreenOrientation', :path => '../../node_modules/@capacitor/screen-orientation'
  pod 'CapacitorStatusBar', :path => '../../node_modules/@capacitor/status-bar'
  pod 'CapgoCapacitorNativeBiometric', :path => '../../node_modules/@capgo/capacitor-native-biometric'
  pod 'CodetrixStudioCapacitorGoogleAuth', :path => '../../node_modules/@codetrix-studio/capacitor-google-auth'
end


def commonPods #通用pods集
  pod 'CryptoSwift', '~> 1.6.0'
  pod 'HandyJSON', :git => 'https://github.com/Miles-Matheson/HandyJSON.git'
  pod 'SwiftyRSA'
  pod 'GMOpenSSL', '~> 2.2.9'
  pod 'DZNEmptyDataSet'
  pod 'Alamofire'
  pod 'AFNetworking', '~> 4.0.0'
  pod 'BEMCheckBox'
#  pod 'OpenSSL-Universal', '1.0.2.17'
end


target 'App' do
  capacitor_pods
  commonPods
  pod 'SnapKit', '~> 5.6.0'
#  pod 'IQKeyboardManagerSwift'
  pod 'Kingfisher'
  pod 'SwiftyDropbox'
#  pod 'BaseLib', :path => '../BaseLib'

  # Add your Pods here
end

target 'autofill' do
  commonPods
  pod 'SnapKit', '~> 5.6.0'
  pod 'DTTextField'
#  pod 'IQKeyboardManagerSwift'
  pod 'Kingfisher'
end

#target 'TermipassShare' do
#  commonPods
#end

target 'VaultBaseFramework' do
  use_frameworks!
#  platform :ios, '13.0'
  project 'VaultBaseFramework/VaultBaseFramework.xcodeproj'
  commonPods
  pod 'SnapKit', '~> 5.6.0'
#  pod 'IQKeyboardManagerSwift'
  pod 'Kingfisher'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      xcconfig_path = config.base_configuration_reference.real_path
      xcconfig = File.read(xcconfig_path)
      xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
      File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
    end
  end
end
